# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    mailer-sender: '%env(MAILER_SENDER)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.area:
        class: App\Admin\AreaAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Area, manager_type: orm, label: Area, group: System, icon: '<i class="fa fa-gears"></i>' }
            
    admin.table_group:
        class: App\Admin\TableGroupAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\TableGroup, manager_type: orm, label: Table Group, group: System, icon: '<i class="fa fa-gears"></i>' }
            
    admin.question:
        class: App\Admin\QuestionAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Question, manager_type: orm, label: Question, group: LPA, icon: '<i class="fa fa-bar-chart"></i>' }

    admin.question_answer:
        class: App\Admin\QuestionAnswerAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\QuestionAnswer, manager_type: orm, label: Question Answer, group: LPA, icon: '<i class="fa fa-bar-chart"></i>' }
            
    admin.question_answer_statistics:
        class: App\Block\QuestionAnswerStatisticsBlockService
        tags:
            - name: sonata.block
              manager_type: orm
              label: Statistics
            
    App\Service\Admin\DecoratingDataSource:
        decorates: 'sonata.admin.data_source.orm'
        
    gedmo.mapping.driver.attribute:
        class: Gedmo\Mapping\Driver\AttributeReader

    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_listener, event: 'onFlush' }
            - { name: doctrine.event_listener, event: 'loadClassMetadata' }
        calls:
            - [ setAnnotationReader, [ "@gedmo.mapping.driver.attribute" ] ]
    
    